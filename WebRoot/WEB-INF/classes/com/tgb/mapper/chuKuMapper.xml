<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 
	namespac: 必须与对应的接口全类名一致
	id: 必须与对应接口的某个对应的方法名一致	
 -->
 
<mapper namespace="com.tgb.mapper.ChuKuMapper">
	
	<insert id="save" parameterType="ChuKu">
		insert into chu_ku(id, 
			deliver_date, 
			customer_id, 
			customer_name, 
			book_owner_id, 
			book_owner_name, 
			deliver_man, 
			deliver_contact_phone, 
			revision,
			quantity,
			fixed_price,
			discount,
			discounted_price,
			crate_id,
			deliver_address,
			postcode,
			transportation,
			site_arrived,
			contact_person,
			contact_phone,
			the_book_id) 
		values(#{id},
			#{deliver_date},
			#{customer_id},
			#{customer_name},
			#{book_owner_id},
			#{book_owner_name},
			#{deliver_man},
			#{deliver_contact_phone},
			#{revision},
			#{quantity},
			#{fixed_price},
			#{discount},
			#{discounted_price},
			#{crate_id},
			#{deliver_address},
			#{postcode},
			#{transportation},
			#{site_arrived},
			#{contact_person},
			#{contact_phone},
			#{the_book_id})
	</insert>
	
	<update id="update" parameterType="ChuKu">
		update chu_ku set deliver_date=#{deliver_date}, 
			customer_id=#{customer_id}, 
			customer_name=#{customer_name}, 
			book_owner_id=#{book_owner_id}, 
			book_owner_name=#{book_owner_name}, 
			deliver_man=#{deliver_man}, 
			deliver_contact_phone=#{deliver_contact_phone},
			revision=#{revision},
			quantity=#{quantity},
			fixed_price=#{fixed_price},
			discount=#{discount},
			discounted_price=#{discounted_price},
			crate_id=#{crate_id},
			deliver_address=#{deliver_address},
			postcode=#{postcode},
			transportation=#{transportation},
			site_arrived=#{site_arrived},
			contact_person=#{contact_person},
			contact_phone=#{contact_phone},
			the_book_id=#{the_book_id}
		where id=#{id}
	</update>
	
	<delete id="delete" parameterType="String">
		delete from chu_ku where id=#{id}
	</delete>
	
	<select id="findById" parameterType="String" resultType="ChuKu">
		select chu_ku.id, 
			deliver_date, 
			customer_id, 
			customer_name, 
			book_owner_id, 
			book_owner_name, 
			deliver_man, 
			deliver_contact_phone, 
			book.book_name,
			revision,
			quantity,
			book.price,
			fixed_price,
			discount,
			discounted_price,
			crate_id,
			deliver_address,
			postcode,
			transportation.content,
			site_arrived,
			contact_person,
			contact_phone,
			the_book_id
		from (chu_ku inner join book on chu_ku.the_book_id = book.id)
			inner join transportation on chu_ku.transportation=transportation.id		
		where chu_ku.id=#{id}
	</select>
	
	<select id="findAll" resultType="ChuKu">
		select chu_ku.id, 
			deliver_date, 
			customer_id, 
			customer_name, 
			book_owner_id, 
			book_owner_name, 
			deliver_man, 
			deliver_contact_phone, 
			book.book_name,
			revision,
			quantity,
			book.price,
			fixed_price,
			discount,
			discounted_price,
			crate_id,
			deliver_address,
			postcode,
			transportation.content,
			site_arrived,
			contact_person,
			contact_phone,
			the_book_id
		from (chu_ku inner join book on chu_ku.the_book_id = book.id)
			inner join transportation on chu_ku.transportation=transportation.id	
		order by chu_ku.id asc
	</select>
	
	<select id="calculateTotalPageAndRecordNumber" parameterType="com.tgb.model.ChuKu" resultType="ChuKu">
		select chu_ku.id, 
			deliver_date, 
			customer_id, 
			customer_name, 
			book_owner_id, 
			book_owner_name, 
			deliver_man, 
			deliver_contact_phone, 
			book.book_name,
			revision,
			quantity,
			book.price,
			fixed_price,
			discount,
			discounted_price,
			crate_id,
			deliver_address,
			postcode,
			transportation.content,
			site_arrived,
			contact_person,
			contact_phone,
			the_book_id
		from (chu_ku inner join book on chu_ku.the_book_id = book.id)
			inner join transportation on chu_ku.transportation=transportation.id	
		<where>
			<if test="customer_name != null and customer_name != '' ">
				customer_name like CONCAT(CONCAT('%', #{customer_name, jdbcType=VARCHAR}), '%')
			</if>
			<if test="deliver_man != null and deliver_man != '' ">
				AND deliver_man like CONCAT(CONCAT('%', #{deliver_man, jdbcType=VARCHAR}), '%')
			</if>
			<if test="book_name != null and book_name != '' ">
				AND book.book_name like CONCAT(CONCAT('%', #{book_name, jdbcType=VARCHAR}), '%')
			</if>
			<if test="contact_person != null and contact_person != '' ">
				AND contact_person like CONCAT(CONCAT('%', #{contact_person, jdbcType=VARCHAR}), '%')
			</if>
		</where>
		order by chu_ku.id asc
	</select>
	
</mapper>